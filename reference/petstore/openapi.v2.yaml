openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Petstore V2
  license:
    name: MIT
    url: stoplight.io
  description: This is V2
  contact:
    name: Dave Roberts
    url: stoplight.io
    email: dr@stoplight.io
  termsOfService: stoplight.io
servers:
  - url: 'http://petstore.swagger.io/v2'
tags:
  - name: Pets
  - name: Endpoints
  - name: Schemas
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - Pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        '400':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
      description: GET pets
    post:
      summary: Create a pet
      operationId: createPets
      responses:
        '200':
          description: Null response
        '400':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
      description: Create a pet
      tags:
        - Pets
        - Endpoints
  '/pets/{petId}':
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - Endpoints
        - Pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: ./models/pet.v1.yaml
        '400':
          description: Bad Request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: ../common/models/error.v1.yaml
      description: GET a specific pet
components:
  schemas:
    Pets:
      title: Pets
      description: A list of pets.
      type: array
      x-tags:
        - Pets
      items:
        $ref: ./models/pet.v1.yaml
    model_v1:
      title: model_v2
      type: object
      properties:
        id:
          type: string
      description: Model V2
